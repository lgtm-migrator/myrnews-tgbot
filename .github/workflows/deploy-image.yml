name: Deployment

on:
  repository_dispatch:
    types:
      - image-pushed
  workflow_dispatch:
    inputs:
      tag:
        default: edge
        required: true
        description: Docker image tag
  release:
    types:
      - released

env:
  IMAGE_NAME: myrotvorets/myrnews-tgbot

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Normalize inputs
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            IMAGE_VERSION="${{ github.event.inputs.tag }}"
            COMMIT_HASH="${{ github.sha }}"
          elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            IMAGE_VERSION="${{ github.event.client_payload.version }}"
            COMMIT_HASH="${{ github.event.client_payload.sha }}"
          else
            IMAGE_VERSION="${{ github.event.release.tag_name }}"
            COMMIT_HASH="${{ github.event.release.tag_name }}"
          fi

          echo IMAGE_VERSION="${IMAGE_VERSION}" >> $GITHUB_ENV
          echo COMMIT_HASH="${COMMIT_HASH}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ env.COMMIT_HASH }}

      - name: Prepare the files
        uses: myrotvorets/composite-actions/prepare-k8s-deployment@master
        with:
          image_version: ${{ env.IMAGE_VERSION }}
          secret_environment: ${{ secrets.SECRET_ENVIRONMENT }}
          path: iac

      - name: Start deployment
        uses: chrnorm/deployment-action@v1.2.0
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: production

      - name: Deploy
        uses: myrotvorets/kubectl-action@1.0.4
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -k iac/

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Cleanup
        if: always()
        run: rm -f ./iac/.env
