name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Docker Image Tag
        default: edge
        required: true

jobs:
  sanity-check:
    runs-on: ubuntu-latest

    steps:
      - name: Check if the image exists
        run: docker pull "myrotvorets/myrnews-tgbot:${IMAGE_TAG}"
        env:
          IMAGE_TAG: ${{ github.event.inputs.tag }}

  manual-deploy:
    runs-on: ubuntu-latest
    needs: sanity-check

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Prepare the files
        uses: ./.github/actions/prepare-deployment
        with:
          image_version: ${{ github.event.inputs.tag }}
          secret_environment: ${{ secrets.SECRET_ENVIRONMENT }}

      - name: Start deployment
        uses: chrnorm/deployment-action@v1.2.0
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: production

      - name: Deploy
        uses: myrotvorets/kubectl-action@1.0.4
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -k iac/

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Cleanup
        if: always()
        run: rm -f ./iac/.env
